Index: src/main/java/MaxService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/MaxService.java b/src/main/java/MaxService.java
new file mode 100644
--- /dev/null	(date 1675861928637)
+++ b/src/main/java/MaxService.java	(date 1675861928637)
@@ -0,0 +1,10 @@
+public class MaxService {
+
+    public int max(int a, int b) {
+        if (a > b) {
+            return a;
+        } else {
+            return b;
+        }
+    }
+}
\ No newline at end of file
Index: src/test/java/MaxServiceTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/MaxServiceTest.java b/src/test/java/MaxServiceTest.java
new file mode 100644
--- /dev/null	(date 1675862062762)
+++ b/src/test/java/MaxServiceTest.java	(date 1675862062762)
@@ -0,0 +1,31 @@
+import org.junit.jupiter.api.Assertions;
+import org.junit.jupiter.api.Test;
+
+public class MaxServiceTest {
+
+    @Test
+    public void shouldFindMax() {
+        MaxService service = new MaxService();
+
+        int a = 5;
+        int b = 3;
+
+        int expected = a;
+        int actual = service.max(a, b);
+
+        Assertions.assertEquals(expected, actual);
+    }
+
+    @Test
+    public void shouldFindMaxIfB() {
+        MaxService service = new MaxService();
+
+        int a = 3;
+        int b = 5;
+
+        int expected = b;
+        int actual = service.max(a, b);
+
+        Assertions.assertEquals(expected, actual);
+    }
+}
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1675862131471)
+++ b/.idea/compiler.xml	(date 1675862131471)
@@ -0,0 +1,16 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="javaqamvn" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="JaCoCo" target="11" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/encodings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/encodings.xml b/.idea/encodings.xml
new file mode 100644
--- /dev/null	(date 1675861044192)
+++ b/.idea/encodings.xml	(date 1675861044192)
@@ -0,0 +1,7 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Encoding">
+    <file url="file://$PROJECT_DIR$/src/main/java" charset="UTF-8" />
+    <file url="file://$PROJECT_DIR$/src/main/resources" charset="UTF-8" />
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1675861044236)
+++ b/.idea/vcs.xml	(date 1675861044236)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
